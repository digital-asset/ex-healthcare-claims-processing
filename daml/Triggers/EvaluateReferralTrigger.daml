--
-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
--



module Triggers.EvaluateReferralTrigger where

import Daml.Trigger
import DA.Next.Map qualified as Maps

import Main.Provider
import Main.NetworkContract
import DA.List.Total (head)
import DA.Foldable (forA_)
import DA.Optional

evaluateReferralTrigger : Trigger ()
evaluateReferralTrigger = Trigger
  { initialize = const ()
  , updateState = \_ _ _ -> ()
  , rule = evaluateReferrals
  , registeredTemplates = RegisteredTemplates [
        registeredTemplate @ReferralRequest
      , registeredTemplate @ProviderNetworkContract
    ]
  , heartbeat = None
  }

evaluateReferrals : Party -> ACS -> Time -> Maps.Map CommandId [Command] -> () -> TriggerA ()
evaluateReferrals party activeContracts _ _ () = do
  let requests = map fst $ getContracts @ReferralRequest activeContracts
      networkContractOpt =
        head $ getContracts @ProviderNetworkContract activeContracts

  whenSome networkContractOpt $
    \(networkContract, _) ->
      forA_ requests (`dedupExercise` EvaluateReferral networkContract)
