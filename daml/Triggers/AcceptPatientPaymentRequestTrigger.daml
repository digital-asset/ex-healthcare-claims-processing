--
-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
--



module Triggers.AcceptPatientPaymentRequestTrigger where

import Main.Claim
import Daml.Script (Script, script)
import Daml.Trigger
import DA.Next.Map qualified as Maps
import DA.Foldable hiding (length)
import Daml.Trigger.Assert
import DA.Assert
import DemoOnboardScenario.Treatment
import DemoOnboardScenario.ReferenceData
import Test.Triggers.TriggerTestUtils

acceptPatientPaymentRequestTrigger : Trigger ()
acceptPatientPaymentRequestTrigger = Trigger
  { initialize = const ()
  , updateState = \_ _ _ -> ()
  , rule = acceptPatientPaymentRequestRule
  , registeredTemplates = RegisteredTemplates [
      registeredTemplate @PatientPaymentRequest
    ]
  , heartbeat = None
  }

acceptPatientPaymentRequestRule : Party -> ACS -> Time -> Maps.Map CommandId [Command] -> () -> TriggerA ()
acceptPatientPaymentRequestRule _party activeContracts _ _ () =
  forA_ claimRequests $ \(patientPaymentRequestCid, _patientPaymentRequest) ->
    dedupExercise patientPaymentRequestCid AcceptPatientObligation
 where
  claimRequests = getContracts @PatientPaymentRequest activeContracts

-- Tests ---------------------------

testPatientPaymentRequestAccepted: Script ()
testPatientPaymentRequestAccepted = script do
  parties@Parties{..} <- allocateParties
  treatmentScenario <- treatmentTest parties

  let activeContracts =
          toACS treatmentScenario.paymentReq11.patientReq
  commands <-
    testTrigger acceptPatientPaymentRequestTrigger patient1 activeContracts

  length commands === 1
  assertExerciseCmd commands $ \(cid, choiceArg) -> do
    assertEq cid treatmentScenario.paymentReq11.patientReq
    assertEq choiceArg AcceptPatientObligation

testNoPatientPaymentRequest: Script ()
testNoPatientPaymentRequest = script do
  Parties{patient1} <- allocateParties

  let activeContracts = mempty
  commands <-
    testTrigger acceptPatientPaymentRequestTrigger patient1 activeContracts

  length commands === 0
